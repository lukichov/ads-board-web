<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ include file="../layout/taglib.jsp"%>


<div class="panel panel-default">
  <div class="panel-body">
<security:authorize access="isAuthenticated()">
<h4>Здравствуйте, <b>${user.name}!</b></h4> 
</security:authorize>
<h4>Добро пожаловать на Доску объявлений!</h4>
<br/>
<p>Вы можете просматривать объявления прямо сейчас, перейдя в раздел <a href='<spring:url value="/ads.html"></spring:url>'>Все объявления</a>.</p>
<security:authorize access="! isAuthenticated()">
<br/>
<p>Если Вы хотите разместить новые объявления или управлять объявлениями, добавленные Вами ранее, пожалуйста, 
<a href="<spring:url value="/register.html" />">зарегистрируйтесь</a> или <a href="<spring:url value="/login.html" />">войдите в систему.</a></p>
<br/>
</security:authorize>
<security:authorize access="isAuthenticated()">
<p>Для управления своими объявлениями перейдите в раздел <a href='<spring:url value="/myads.html"></spring:url>'>Мои объявления</a></p> 
</security:authorize>
</div>
</div>

<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">Информация о проекте:</h3>
  </div>
  <div class="panel-body">
    <h4>Была поставлена задача написать web приложение “Доска объявлений”.</h4>

<p>Приложение должно содержать функционал для публикации, просмотра и хранения 
объявлений. </p>
<p>Приложение должно состоять из следующих разделов: </p>
<ol>
	<li>Первый экран, страница логина/представления системе</li>
	<li>Раздел списка объявлений с возможность фильтрации (все объявления, 
	объявления в рубрике, только мои объявления, объявления автора). </li>
	<li>Раздел редактирования/создания удаления. </li>
</ol>
<p>Объявление должно содержать: </p>
<ul>
	<li>Имя автора </li>
	<li>Дата публикации (хранить как unix time) </li>
	<li>Рубрика (одна из предустановленных рубрик) </li>
	<li>Заголовок (от 10 до 30 символов) </li>
	<li>Текст (от 20 до 400 символов) </li>
</ul>
<p>Список рубрик: </p>
<ul>
	<li>“продажа” </li>
	<li>“покупка”</li>
	<li>“аренда” </li>
	<li>“услуги” </li>
	<li>“знакомства” </li>
</ul>
<p>Фильтрация объявлений в разделе со списком объявлений: </p>
<ul>
	<li>По рубрике (выпадающий список) </li>
	<li>По автору (поле ввода для имени автора). Функционал частичного 
	совпадения приветствуется. </li>
	<li>Мои объявления (чекбокс. при выборе делает неактивным фильтрацию по 
	автору). </li>
</ul>
<br/>
<h4>Список выполненных технических требований:</h4>
<ol>
	<li>Приложение содержит четкое логическое разделение между 
	представление, логикой и источником данных. (Пакеты com.adsboard.controller, com.adsboard.model, 
	com.adsboard.repository, com.adsboard.service)</li>
	<li>Все классы содержат поясняющие JavaDocs (ads-board/Javadoc/index.html)</li>
	<li>Использована валидация данных на серверной 
	стороне (javax.validation) и на стороне клиента (javascript). </li>
	<li>Логика приложения максимально плотно покрыта JUnit тестами (написано 25 тестов)</li>
	<li>Сборка проекта осуществляется средствами maven </li>
	<li>Готовое приложение доступно на github репозитории </li>
	<li>Дополнительная настройка для запуска приложения описана в файле readme.txt </li>
	<li>В качестве БД приложения использована PotsgreSQL</li>
	<li>Приложение представляет собой набор модулей: 
	<ul>
	<li>ads-board-core - содержит модели и логику приложения</li> 
	<li>ads-board-test - содержит Unit тесты на JUnit</li>
	<li>ads-board-web - содержит контроллеры</li>
	</ul>
	</li>
	<li>Использованы готовые ui комоненты (bootstrap, jquery ui) </li>
	<li>Использован web фреймворк Spring MVC</li>
	<li>Для обеспечения безопасности использован Spring	Security</li>
	<li>Пароли пользователей в БД хранятся в зашифрованном виде с использованием  
	org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder</li>
</ol>
<p>Кроме требуемого функционала дополнительно реализованы следующие функции:</p>
<ol>
<li>
Возможность зарегистрироваться на сайте и получить доступ к функционалу, доступному пользователям с ролью ROLE_USER. 
</li>
<li>
Пользователь с ролью ROLE_ADMIN имеет доступ к дополнительному функционалу:
<ul>
	<li>Просмотр списка пользователей и удаление пользователя (вместе со всеми его объявлениями)</li> 
	<li>Просмотр списка рубрик</li>
	</ul>
</li>

</ol>

  </div>
</div>